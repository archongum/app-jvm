<?xml version="1.0" encoding="UTF-8"?>
<!-- Hot config -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- Spring property -->
    <springProperty name="root.level" source="logging.level.root"/>
    <springProperty name="app.name" source="spring.application.name"/>

    <!-- CONST: Logs dir -->
    <property name="logs.dir" value="${app.name}"/>
    <property name="logs.history.dir" value="${logs.dir}/%d{yyyy-MM-dd}"/>

    <!-- CONST: Appender name -->
    <property name="logs.all.appender" value="ALL_LOGS"/>
    <property name="logs.error.appender" value="ERROR_LOGS"/>
    <property name="logs.apm.appender" value="APM_LOGS"/>
    <property name="logs.console.appender" value="CONSOLE_LOGS"/>

    <!-- CONST: Logs filename -->
    <property name="logs.all.filename" value="all.log"/>
    <property name="logs.error.filename" value="error.log"/>
    <property name="logs.all.rolling.filename" value="all.%d{yyyy-MM-dd}.%i.log.gz"/>
    <property name="logs.error.rolling.filename" value="error.%d{yyyy-MM-dd}.%i.log.gz"/>

    <!-- CONST: Logs pattern -->
    <property name="logs.charset" value="UTF-8"/>
    <property name="logs.file.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%mdc{traceid:-NA}] [%.50thread] %-5level %.100class [%file:%line] - %msg%n"/>
    <property name="logs.stdout.pattern" value="%red(%d{yyyy-MM-dd HH:mm:ss.SSS}) %yellow([%mdc{traceid:-NA}]) %green([%.50thread]) %highlight(%-5level) %magenta(%.100class) %cyan([%file:%line]) - %msg%n"/>

    <!-- CONST: History config -->
    <property name="logs.history.max_history" value="7"/>
    <property name="logs.history.max_file_size" value="100MB"/>
    <property name="logs.history.total_size_cap" value="1000MB"/>

    <!-- CONST: All logs -->
    <appender name="${logs.all.appender}" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logs.dir}/${logs.all.filename}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logs.history.dir}/${logs.all.rolling.filename}</fileNamePattern>
            <maxFileSize>${logs.history.max_file_size}</maxFileSize>
            <maxHistory>${logs.history.max_history}</maxHistory>
            <totalSizeCap>${logs.history.total_size_cap}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>${logs.charset}</charset>
            <pattern>${logs.file.pattern}</pattern>
        </encoder>
    </appender>

    <!-- CONST: Error -->
    <appender name="${logs.error.appender}" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${logs.dir}/${logs.error.filename}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logs.history.dir}/${logs.error.rolling.filename}</fileNamePattern>
            <maxFileSize>${logs.history.max_file_size}</maxFileSize>
            <maxHistory>${logs.history.max_history}</maxHistory>
            <totalSizeCap>${logs.history.total_size_cap}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>${logs.charset}</charset>
            <pattern>${logs.file.pattern}</pattern>
        </encoder>
    </appender>

    <!-- CONST: APM -->
    <appender name="${logs.apm.appender}" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout">
                <Pattern>%msg%n</Pattern>
            </layout>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>


    <!-- CONST: System.out -->
    <appender name="${logs.console.appender}" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>${logs.charset}</charset>
            <pattern>${logs.stdout.pattern}</pattern>
        </encoder>
    </appender>

    <!-- CONST: root -->
    <root level="${root.level}">
        <appender-ref ref="${logs.console.appender}"/>
    </root>

    <!-- Profile: uat, prd -->
    <springProfile name="uat | prd">
        <property name="logs.dir" value="/home/dota/logs/${app.name}"/>

        <root level="${root.level}">
            <appender-ref ref="${logs.all.appender}"/>
            <appender-ref ref="${logs.error.appender}"/>
            <appender-ref ref="${logs.apm.appender}"/>
        </root>
    </springProfile>
</configuration>
